{"version":3,"file":"EmailsEditor.js","sources":["../../../src/emailsEditor.js"],"sourcesContent":["import './main.scss';\n\n// TODO: turn this into createElement and EXTERNALIZE\nconst REMOVE_SVG = `<svg class=\"remove-icon-svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 0.8L7.2 0L4 3.2L0.8 0L0 0.8L3.2 4L0 7.2L0.8 8L4 4.8L7.2 8L8 7.2L4.8 4L8 0.8Z\" fill=\"#050038\"/>\n</svg>`;\n\n// TODO: add random email\n\nexport default class emailsEditor {\n  constructor(config) {\n    config = config || {};\n\n    if (!config || !config.container) {\n      throw new Error('invalid config exiting...');\n    }\n\n    this\n      .initValues(config)\n      .renderMainContainer()\n      .initListeners();\n  }\n\n  initValues(config) {\n    this.emails = [];\n    this.onChange = config.onChange;\n    this.container = config.container;\n    this.onGetCount = config.onGetCount;\n    return this;\n  }\n\n  getEmails() {\n    return this.emails;\n  }\n\n  /**\n   * It clears emails in view and render only valid ones\n   */\n  setEmails(emails) {\n    if(!emails) {\n      return;\n    }\n    const newEmails = emails.reduce((validEmails, email) => {\n      const regexResults = this.isValidEmail(email);\n      if (regexResults) {\n        validEmails.push(regexResults[0]);\n      }\n      return validEmails;\n    }, []);\n    const emailsBefore = [...this.emails];\n    this\n      .clearEmailBlocks()\n      .renderEmailBlocks(null, newEmails)\n      .dispatchOnChange(emailsBefore);\n  }\n\n  clearEmailBlocks() {\n    this.emails = [];\n    this.container\n      .querySelectorAll('.ballon')\n      .forEach(el => el.remove());\n\n    return this;\n  }\n\n  dispatchOnChange(emailsBefore) {\n    if (this.onChange instanceof Function) {\n      this.onChange(emailsBefore, this.emails);\n    }\n    return this;\n  }\n\n  initListeners() {\n    const {container} = this;\n    const input = container.querySelector('input');\n    const ballonsContainer = container.querySelector('.ballons-container');\n    const getCountBtn = container.querySelector('.btn-count');\n    const addRandomBtn = container.querySelector('.btn-add-random');\n    const keys = {\n      ENTER: 13,\n      COMMA: 188,\n    };\n    const keyUpListener = e => {\n      const { keyCode, currentTarget, ctrlKey, metaKey } = e || {};\n      if (keyCode === keys.COMMA || keyCode === keys.ENTER) {\n        const emailsBefore = [...this.emails];\n        this\n          .renderEmailBlocks(currentTarget.value)\n          .dispatchOnChange(emailsBefore)\n          .cleanInput();\n      }\n      if (metaKey || ctrlKey) {\n        return false;\n      }\n      return e;\n    };\n    const pasteListener = e => {\n      const { currentTarget, clipboardData } = e || {};\n      const clipBoardText = clipboardData.getData('text');\n      const emailsBefore = [...this.emails];\n      this\n        .renderEmailBlocks(currentTarget.value+clipBoardText)\n        .dispatchOnChange(emailsBefore)\n        .cleanInput();\n\n      e.preventDefault();\n    };\n    const ballonsClickHandler = e => {\n      const isClickOnSvg = e.target.getAttribute('class') === 'remove-icon-svg';\n      const target = isClickOnSvg ? e.target.parentElement : e.target;\n\n      if (target.className === 'remove-icon') {\n        if (target.parentElement.className !== 'invalid ballon') {\n          const emailsBefore = [...this.emails];\n          this.emails.splice(this.emails.indexOf(target.parentElement.getAttribute('data-email')), 1);\n          this.dispatchOnChange(emailsBefore);\n        }\n        ballonsContainer.removeChild(target.parentElement);\n      }\n    };\n\n    input.addEventListener('paste', pasteListener);\n    input.addEventListener('keyup', keyUpListener);\n    input.addEventListener('focusout', (e) => {\n      const { currentTarget} = e || {};\n      const emailsBefore = [...this.emails];\n      this\n        .renderEmailBlocks(currentTarget.value)\n        .dispatchOnChange(emailsBefore)\n        .cleanInput();\n    });\n    ballonsContainer.addEventListener('click', ballonsClickHandler);\n\n    if (this.onGetCount && this.onGetCount instanceof Function) {\n      getCountBtn.addEventListener('click', () => {\n        this.onGetCount(this.emails.length);\n      });\n    }\n\n    addRandomBtn.addEventListener('click', () => {\n      const random = `some${(new Date()).getTime()}@random.com`;\n      const emailsBefore = [...this.emails];\n      this\n        .renderEmailBlocks(random)\n        .dispatchOnChange(emailsBefore);\n    });\n\n    // TODO: losing focus and adding blocks;\n\n    return this;\n  }\n\n  renderEmailBlock(string, valid) {\n    const removeIconDiv = document.createElement('div');\n    removeIconDiv.className = !valid ? 'invalid ballon' : 'ballon';\n    // TODO: turn this into createElement\n    removeIconDiv.innerHTML = `${valid ? string : `<span>${string}</span>`} <div class=\"remove-icon\">${REMOVE_SVG}</div>`;\n    removeIconDiv.setAttribute('data-email', valid ? string : '');\n    return removeIconDiv;\n  }\n\n  isValidEmail(string) {\n    // eslint-disable-next-line max-len\n    const emailRegx = /(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/g;\n    return emailRegx.exec(string);\n  }\n\n  /**\n   * It break string value into blocks by comma, checks if is valid, adds to local copy of valid emails\n   * and then renders, all in one go for performance purposes.\n   */\n  renderEmailBlocks(stringValue, values) {\n    const blocks = values || (stringValue || '').split(',');\n    const ballonsBlockFrag = document.createDocumentFragment();\n\n    blocks.map((block) => {\n      block = (block + '').trim();\n      if (!block) {\n        return;\n      }\n      const isEmail = this.isValidEmail(block);\n      ballonsBlockFrag.appendChild(this.renderEmailBlock(block, isEmail));\n\n      // validations and saving to local copy\n      if (isEmail) {\n        this.emails.push(block);\n      }\n    });\n\n    const inputEl = this.container.querySelector('.input-container');\n    this.container\n      .querySelector('.ballons-container')\n      .insertBefore(ballonsBlockFrag, inputEl);\n\n    return this;\n  }\n\n  cleanInput() {\n    const {container} = this;\n    const input = container.querySelector('input');\n    input.value = '';\n    return this;\n  }\n\n  /**\n   * Renders main html container for editor\n   */\n  renderMainContainer() {\n    const {container} = this;\n    // TODO: turn this to createDocumentFragment later\n    const template = `\n      <div class=\"container\">\n        <div class=\"top\">\n          <h1>Share <strong>Board name</strong> with others</h1>\n          <div class=\"text-container\">\n            <div class=\"ballons-container\">\n              <div class=\"input-container\"><input placeholder=\"add more people...\"/></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"bottom\">\n          <button class=\"btn-add-random\">\n            Add email\n          </button>  \n          <button class=\"btn-count\">\n            Get emails count\n          </button>\n        </div>\n      </div>\n    `;\n    container.innerHTML = template;\n    return this;\n  }\n}\n"],"names":["REMOVE_SVG","emailsEditor","config","container","Error","initValues","renderMainContainer","initListeners","emails","onChange","onGetCount","newEmails","reduce","validEmails","email","regexResults","isValidEmail","push","emailsBefore","clearEmailBlocks","renderEmailBlocks","dispatchOnChange","querySelectorAll","forEach","el","remove","Function","input","querySelector","ballonsContainer","getCountBtn","addRandomBtn","keys","ENTER","COMMA","keyUpListener","e","keyCode","currentTarget","ctrlKey","metaKey","value","cleanInput","pasteListener","clipboardData","clipBoardText","getData","preventDefault","ballonsClickHandler","isClickOnSvg","target","getAttribute","parentElement","className","splice","indexOf","removeChild","addEventListener","length","random","Date","getTime","string","valid","removeIconDiv","document","createElement","innerHTML","setAttribute","emailRegx","exec","stringValue","values","blocks","split","ballonsBlockFrag","createDocumentFragment","map","block","trim","isEmail","appendChild","renderEmailBlock","inputEl","insertBefore","template"],"mappings":"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"}