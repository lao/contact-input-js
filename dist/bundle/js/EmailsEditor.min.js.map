{"version":3,"file":"EmailsEditor.min.js","sources":["../../../src/emailsEditor.js"],"sourcesContent":["/* eslint-disable no-console */\nimport './main.scss';\n// TODO: turn this into createElement and EXTERNALIZE\nconst REMOVE_SVG = `<svg class=\"remove-icon-svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 0.8L7.2 0L4 3.2L0.8 0L0 0.8L3.2 4L0 7.2L0.8 8L4 4.8L7.2 8L8 7.2L4.8 4L8 0.8Z\" fill=\"#050038\"/>\n</svg>`;\n\n// TODO: add random email\n\nexport default class emailsEditor {\n  constructor(config) {\n    config = config || {};\n\n    if (!config || !config.container) {\n      console.log('invalid config exiting...');\n      return;\n    }\n\n    this\n      .initValues(config)\n      .renderMainContainer()\n      .initListeners();\n  }\n\n  initValues(config) {\n    this.emails = {};\n    this.onChange = config.onChange;\n    this.container = config.container;\n    this.onGetCount = config.onGetCount;\n    return this;\n  }\n\n  getEmails() {\n    return Object.keys(this.emails);\n  }\n\n  /**\n   * It receives list of emails and append valids to the local list plus renders valid emails only\n   */\n  setEmails(emails) {\n    if(!emails || !emails.length) {\n      return;\n    }\n    const emailsTemp = emails.reduce((email, nonRendered) => {\n      if(this.isValidEmail(email)) {\n        nonRendered.append(email);\n        this.emails[email] = true;\n      }\n      return nonRendered;\n    }, []);\n    this.renderEmails(emailsTemp.list);\n    // [Decided not to do as setEmails, seems to be useful only for appending]\n    // TODO: remove preexisting emails\n  }\n\n  dispatchOnChange() {\n    console.log('hello');\n    return this;\n  }\n\n  initListeners() {\n    const {container} = this;\n    const input = container.querySelector('input');\n    const ballonsContainer = container.querySelector('.ballons-container');\n    const getCountBtn = container.querySelector('.btn-count');\n    const keys = {\n      ENTER: 13,\n      COMMA: 188,\n    };\n    const keyUpListener = e => {\n      const { keyCode, currentTarget, ctrlKey, metaKey } = e || {};\n      if (keyCode === keys.COMMA || keyCode === keys.ENTER) {\n        const emailsBefore = Object.keys(this.emails);\n        this\n          .renderEmails(currentTarget.value)\n          .dispatchOnChange(emailsBefore, currentTarget.value)\n          .cleanInput();\n      }\n      if (metaKey || ctrlKey) {\n        return false;\n      }\n      return e;\n    };\n    const pasteListener = e => {\n      const { currentTarget, clipboardData } = e || {};\n      const clipBoardText = clipboardData.getData('text');\n\n      this\n        .renderEmails(currentTarget.value+clipBoardText)\n        .cleanInput();\n\n      e.preventDefault();\n    };\n    const ballonsClickHandler = e => {\n      const isClickOnSvg = e.target.getAttribute('class') === 'remove-icon-svg';\n      const target = isClickOnSvg ? e.target.parentElement : e.target;\n\n      if (target.className === 'remove-icon') {\n        if (target.parentElement.className !== 'invalid ballon') {\n          delete this.emails[target.parentElement.getAttribute('data-email')];\n        }\n        ballonsContainer.removeChild(target.parentElement);\n      }\n    };\n\n    input.addEventListener('paste', pasteListener);\n    input.addEventListener('keyup', keyUpListener);\n    ballonsContainer.addEventListener('click', ballonsClickHandler);\n\n    if (this.onGetCount && this.onGetCount instanceof Function) {\n      getCountBtn.addEventListener('click', () => {\n        const emails = Object.keys(this.emails);\n        this.onGetCount(emails.length);\n      });\n    }\n\n    return this;\n  }\n\n  renderEmailBlock(string, valid) {\n    const removeIconDiv = document.createElement('div');\n    removeIconDiv.className = !valid ? 'invalid ballon' : 'ballon';\n    // TODO: turn this into createElement\n    removeIconDiv.innerHTML = `${string} <div class=\"remove-icon\">${REMOVE_SVG}</div>`;\n    removeIconDiv.setAttribute('data-email', valid ? string : '');\n    return removeIconDiv;\n  }\n\n  isValidEmail(string) {\n    // eslint-disable-next-line max-len\n    const emailRegx = /(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/g;\n    return !!emailRegx.exec(string);\n  }\n\n  /**\n   * It break string value into blocks by comma, checks if is valid, adds to local copy of valid emails\n   * and then renders, all in one go for performance purposes.\n   */\n  renderEmails(stringValue, values) {\n    const blocks = values || (stringValue || '').split(',');\n    const ballonsBlockFrag = document.createDocumentFragment();\n\n    blocks.map((block) => {\n      if(!(block + '').trim()) {return;}\n      const isEmail = this.isValidEmail(block);\n      ballonsBlockFrag.appendChild(this.renderEmailBlock(block, isEmail));\n\n      // validations and saving to local copy\n      if (isEmail) {\n        this.emails[block] = true;\n      }\n    });\n\n    const inputEl = this.container.querySelector('.input-container');\n    this.container\n      .querySelector('.ballons-container')\n      .insertBefore(ballonsBlockFrag, inputEl);\n\n    return this;\n  }\n\n  cleanInput() {\n    const {container} = this;\n    const input = container.querySelector('input');\n    input.value = '';\n    return this;\n  }\n\n  /**\n   * Renders main html container for editor\n   */\n  renderMainContainer() {\n    const {container} = this;\n    // TODO: turn this to createDocumentFragment later\n    const template = `\n      <div class=\"container\">\n        <div class=\"top\">\n          <h1>Share <strong>Board name</strong> with others</h1>\n          <div class=\"text-container\">\n            <div class=\"ballons-container\">\n              <div class=\"input-container\"><input placeholder=\"add more people...\"/></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"bottom\">\n          <button>\n            Add email\n          </button>  \n          <button class=\"btn-count\">\n            Get emails count\n          </button>\n        </div>\n      </div>\n    `;\n    container.innerHTML = template;\n    return this;\n  }\n}\n"],"names":["config","container","initValues","renderMainContainer","initListeners","emails","onChange","onGetCount","this","Object","keys","length","emailsTemp","reduce","email","nonRendered","_this","isValidEmail","append","renderEmails","list","input","querySelector","ballonsContainer","getCountBtn","addEventListener","e","currentTarget","clipBoardText","clipboardData","getData","_this2","value","cleanInput","preventDefault","keyCode","ctrlKey","metaKey","emailsBefore","dispatchOnChange","target","getAttribute","parentElement","className","removeChild","Function","string","valid","removeIconDiv","document","createElement","innerHTML","setAttribute","exec","stringValue","values","blocks","split","ballonsBlockFrag","createDocumentFragment","map","block","trim","isEmail","_this3","appendChild","renderEmailBlock","inputEl","insertBefore"],"mappings":"4OAUcA,0GACVA,EAASA,GAAU,KAEHA,EAAOC,gBAMpBC,WAAWF,GACXG,sBACAC,0EAGMJ,eACJK,OAAS,QACTC,SAAWN,EAAOM,cAClBL,UAAYD,EAAOC,eACnBM,WAAaP,EAAOO,WAClBC,gDAIAC,OAAOC,KAAKF,KAAKH,0CAMhBA,iBACJA,GAAWA,EAAOM,YAGhBC,EAAaP,EAAOQ,OAAO,SAACC,EAAOC,UACpCC,EAAKC,aAAaH,KACnBC,EAAYG,OAAOJ,GACnBE,EAAKX,OAAOS,IAAS,GAEhBC,GACN,SACEI,aAAaP,EAAWQ,yDAOtBZ,wDAIAP,EAAaO,KAAbP,UACDoB,EAAQpB,EAAUqB,cAAc,SAChCC,EAAmBtB,EAAUqB,cAAc,sBAC3CE,EAAcvB,EAAUqB,cAAc,cACtCZ,EACG,GADHA,EAEG,WAsCTW,EAAMI,iBAAiB,QAtBD,SAAAC,SACqBA,GAAK,GAAtCC,IAAAA,cACFC,IADiBC,cACaC,QAAQ,QAE5CC,EACGZ,aAAaQ,EAAcK,MAAMJ,GACjCK,aAEHP,EAAEQ,mBAeJb,EAAMI,iBAAiB,QArCD,SAAAC,SACiCA,GAAK,GAAlDS,IAAAA,QAASR,IAAAA,cAAeS,IAAAA,QAASC,IAAAA,WACrCF,IAAYzB,GAAcyB,IAAYzB,EAAY,KAC9C4B,EAAe7B,OAAOC,KAAKqB,EAAK1B,QACtC0B,EACGZ,aAAaQ,EAAcK,OAC3BO,iBAAiBD,EAAcX,EAAcK,OAC7CC,oBAEDI,IAAWD,GAGRV,IA0BTH,EAAiBE,iBAAiB,QAdN,SAAAC,OAEpBc,EADkD,oBAAnCd,EAAEc,OAAOC,aAAa,SACbf,EAAEc,OAAOE,cAAgBhB,EAAEc,OAEhC,gBAArBA,EAAOG,YAC8B,mBAAnCH,EAAOE,cAAcC,kBAChBZ,EAAK1B,OAAOmC,EAAOE,cAAcD,aAAa,eAEvDlB,EAAiBqB,YAAYJ,EAAOE,kBAQpClC,KAAKD,YAAcC,KAAKD,sBAAsBsC,UAChDrB,EAAYC,iBAAiB,QAAS,eAC9BpB,EAASI,OAAOC,KAAKqB,EAAK1B,QAChC0B,EAAKxB,WAAWF,EAAOM,UAIpBH,8CAGQsC,EAAQC,OACjBC,EAAgBC,SAASC,cAAc,cAC7CF,EAAcL,UAAaI,EAA2B,SAAnB,iBAEnCC,EAAcG,oBAAeL,mUAC7BE,EAAcI,aAAa,aAAcL,EAAQD,EAAS,IACnDE,uCAGIF,WAEO,sJACCO,KAAKP,wCAObQ,EAAaC,cAClBC,EAASD,IAAWD,GAAe,IAAIG,MAAM,KAC7CC,EAAmBT,SAASU,yBAElCH,EAAOI,IAAI,SAACC,OACLA,EAAQ,IAAIC,YACXC,EAAUC,EAAK/C,aAAa4C,GAClCH,EAAiBO,YAAYD,EAAKE,iBAAiBL,EAAOE,IAGtDA,IACFC,EAAK3D,OAAOwD,IAAS,UAInBM,EAAU3D,KAAKP,UAAUqB,cAAc,gCACxCrB,UACFqB,cAAc,sBACd8C,aAAaV,EAAkBS,GAE3B3D,iDAIaA,KAAbP,UACiBqB,cAAc,SAChCU,MAAQ,GACPxB,0DAOaA,KAAbP,UAsBGkD,6kBACH3C"}